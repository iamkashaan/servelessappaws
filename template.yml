# This is the standard header for a SAM template
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  A serverless application for an event-driven data processing pipeline.

# Globals are default settings that apply to all functions
Globals:
  Function:
    Timeout: 10 # Timeout in seconds
    MemorySize: 128 # Memory in MB

# 'Resources' is the mandatory section where you define your AWS components
Resources:
  # 1. The S3 bucket for storing raw incoming data
  RawDataBucket:
    Type: AWS::S3::Bucket

  # 2. The S3 bucket for storing processed summary reports
  ReportsBucket:
    Type: AWS::S3::Bucket

  # 3. The Lambda function that captures data from the API
  CaptureDataFunction:
    Type: AWS::Serverless::Function # Defines a Lambda function
    Properties:
      # --- IMPORTANT: Make sure this path matches your folder structure ---
      CodeUri: src/handlers/capture-data/
      # The file and method to execute (e.g., in app.js, the function is named 'handler')
      Handler: app.handler
      Runtime: nodejs18.x # Or python3.9, etc.
      Policies:
        # Give the function permission to write to the raw data S3 bucket
        - S3WritePolicy:
            BucketName: !Ref RawDataBucket
      Events:
        ApiEvent:
          Type: Api # Defines an API Gateway trigger
          Properties:
            Path: /data # The API path
            Method: post # The HTTP method

  # 4. The Lambda function that runs daily to process the data
  ProcessDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      # --- IMPORTANT: Make sure this path matches your folder structure ---
      CodeUri: src/handlers/process-data/
      Handler: app.handler
      Runtime: nodejs18.x
      Policies:
        # Give permission to read from the raw data bucket
        - S3ReadPolicy:
            BucketName: !Ref RawDataBucket
        # Give permission to write reports to the reports bucket
        - S3WritePolicy:
            BucketName: !Ref ReportsBucket
      Events:
        # Trigger this function once per day
        ScheduledReport:
          Type: Schedule
          Properties:
            Schedule: 'rate(1 day)'

Outputs:
  # Output the API endpoint URL after deployment
  ApiURL:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/data/"
